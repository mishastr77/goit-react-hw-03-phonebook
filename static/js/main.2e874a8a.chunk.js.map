{"version":3,"sources":["Components/Filter/filter.module.css","Components/Container/container.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/Form/Form.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js","Components/Form/form.module.css"],"names":["module","exports","Container","children","className","styles","container","Section","title","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","inputNameId","shortid","generate","inputNumberId","this","htmlFor","inputForm","type","onChange","pattern","required","id","buttonForm","Component","ContactsList","contacts","onDeleteContact","map","onClick","Filter","filterLabel","filterInput","App","filter","addContact","contact","some","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parseContacts","JSON","parse","prevProps","console","log","setItem","stringify","visibleContacts","defaultProps","initialContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e874a8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1DR4E\",\"filterInput\":\"filter_filterInput__1wxgB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__2Kb2b\"};","import React from \"react\";\nimport styles from \"./container.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./section.module.css\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"../Section\";\nimport shortid from \"shortid\";\nimport styles from \"./form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  inputNameId = shortid.generate();\n  inputNumberId = shortid.generate();\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Section title=\"Phonebook\">\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor={this.inputNameId}>\n            Name\n            <input\n              className={styles.inputForm}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              required\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              id={this.inputNameId}\n            />\n          </label>\n          <label htmlFor={this.inputNumberId}>\n            Number\n            <input\n              className={styles.inputForm}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              required\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              id={this.inputNumberId}\n            />\n          </label>\n          <button className={styles.buttonForm} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </Section>\n    );\n  }\n}\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./contactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>\r\n          {name}: {number}\r\n        </p>\r\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.filterLabel}>\r\n    Find contacts by name and number\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Container from \"./Components/Container\";\nimport Form from \"./Components/Form\";\nimport ContactsList from \"./Components/ContactsList\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport Filter from \"./Components/Filter\";\nimport initialContacts from \"./Data/initialContacts.json\";\n\nclass App extends Component {\n  static defaultProps = {\n    contacts: initialContacts,\n    filter: \"\",\n  };\n\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: this.props.contacts,\n    filter: this.props.filter,\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n    contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : contacts.some(({ number }) => number === contact.number)\n      ? alert(`${number} is already in contacts`)\n      : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(filter)\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"obnovilos pole contacts\");\n\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"form_inputForm__rXaDS\",\"buttonForm\":\"form_buttonForm__RtmXy\"};"],"sourceRoot":""}